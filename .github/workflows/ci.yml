name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  test:
    name: Test (Elixir ${{ matrix.elixir }} | Erlang/OTP ${{ matrix.otp }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: 1.7.4
            otp: 20.3.8.26
          - elixir: 1.8.2
            otp: 20.3.8.26
          - elixir: 1.9.4
            otp: 20.3.8.26
          - elixir: 1.10.4
            otp: 21.3.8.17
          - elixir: 1.11.4
            otp: 23.2.7
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
      - name: Install dependencies
        run: |
          mix local.hex --force
          mix deps.get --only test
      - name: Run tests
        run: mix test --cover

  check:
    name: Check (Elixir ${{ matrix.elixir }} | Erlang/OTP ${{ matrix.otp }})
    runs-on: ubuntu-latest
    env:
      DIALYZER_PLT_CORE_PATH: priv/plts
      DIALYZER_PLT_LOCAL_PATH: priv/plts
    strategy:
      matrix:
        include:
          - elixir: 1.11.4
            otp: 23.2.7
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
      - name: Install dependencies
        run: |
          mix local.hex --force
          mix deps.get
      - name: Restore Dialyzer cache
        uses: actions/cache@v1
        id: dialyzer-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-erlang-${{ matrix.otp }}-elixir-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: ${{ runner.os }}-erlang-${{ matrix.otp }}-elixir-${{ matrix.elixir }}-plts-
      - name: Check unused dependencies
        run: mix deps.unlock --check-unused
      - name: Check compilation warnings
        run: mix compile --warnings-as-errors
      - name: Check formatted
        run: mix format --check-formatted
      - name: Run Dialyzer
        run: |
          mkdir -p priv/plts
          mix dialyzer
